name: DEV

on:
  push:
    branches:
      - dev

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-and-deploy:
    environment: develop
    name: Setup, Build, and Deploy
    runs-on: ubuntu-latest
    env:
      NODE_ENV: dev
      AWS_REGION: us-east-1
      AWS_KEY: ${{ secrets.AWS_KEY }}
      AWS_SECRET: ${{ secrets.AWS_SECRET_KEY }}
      # DATABASE_URL: ${{ secrets.DATABASE_URL_DEV }}

    # run pipeline;
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      #- run: npm ci
      #- run: npm test

      - name: Yarn CI
        run: yarn install --frozen-lockfile

      - name: Install Serverless Framework
        run: yarn global add serverless@3.38.0

      - name: Serverless AWS authentication
        run: sls config credentials --provider aws --key $AWS_KEY --secret $AWS_SECRET

      # - name: Create env file
      #   run: |
      #     cat > .env << EOF
      #     ${{ secrets.ENV }}
      #     EOF
      #     sed '/AWS_REGION.*/d' .env >> env_tmp
      #     sed '/AWS_SECRET.*/d' .env >> env_tmp
      #     sed '/AWS_KEY.*/d' .env >> env_tmp
      #     sed '/AWS_ACCESS_KEY_ID.*/d' .env >> env_tmp
      #     sed '/AWS_SECRET_ACCESS_KEY.*/d' .env >> env_tmp
      #     mv env_tmp .env

      # - name: view the secrets context
      #   shell: bash
      #   run: echo "$SECRETS_CONTEXT"
      #   env:
      #     SECRETS_CONTEXT: ${{ toJson(secrets) }}

      - name: Install Yarn dependencies
        run: yarn

      - name: Exclude build
        run: rm -Rf .build

      - name: Build Project
        run: yarn build

      # - name: Configure prisma
      #   run: yarn setup-prisma

      - name: Deploy
        run: |
          sls deploy --stage dev --region $AWS_REGION
